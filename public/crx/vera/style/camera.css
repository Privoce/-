.camera {
  overflow: hidden;
  position: relative;
  width: fit-content;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  border-radius: var(--border-radius);
  border: none;
  background: transparent;
}
.camera:hover .video .username,
.camera:hover .video .opts {
  visibility: visible;
}
.camera[bg-rm-status='processing'] canvas {
  display: none;
}
.camera[bg-rm-status='processing'] .processing {
  display: block;
}
.camera[bg-rm-status='restore'] canvas {
  display: none;
}
.camera[bg-rm-status='ready'] .processing {
  display: none;
}
.camera[bg-rm-status='ready'] .video video {
  visibility: hidden;
}
.camera .processing {
  z-index: 10;
  display: none;
  text-transform: capitalize;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate3d(-50%, -70%, 0);
  padding: 10px;
  border-radius: 5px;
  background-color: var(--camera-bg-color);
  font-size: 22px;
  color: var(--font-color);
}
.camera .video {
  position: relative;
  display: flex;
}
.camera .video .username {
  visibility: hidden;
  position: absolute;
  top: 5px;
  right: 5px;
  cursor: text;
  padding: 6px 10px;
  border: none;
  font-size: 18px;
  color: var(--font-color);
  border-radius: var(--border-radius);
  background-color: var(--button-bg-color);
}
.camera .video .opts {
  z-index: 7;
  display: none;
  position: absolute;
  bottom: 5px;
  left: 5px;
  padding: 5px;
  display: flex;
  visibility: hidden;
}
.camera .video .opts .opt {
  padding: 0;
  border: none;
  border-radius: var(--border-radius);
  background-color: var(--button-bg-color);
  height: 22px !important;
  width: 22px !important;
  min-width: unset;
  background-size: 70%;
  background-repeat: no-repeat;
  background-position: center;
  cursor: pointer;
}
.camera .video .opts .opt:not(:last-child) {
  margin-right: 6px;
}
.camera .video .opts .opt.bg {
  background-image: url('chrome-extension://__MSG_@@extension_id__/crx/vera/assets/icon/bg.rm.off.svg');
}
.camera .video .opts .opt.video {
  background-image: url('chrome-extension://__MSG_@@extension_id__/crx/vera/assets/icon/video.off.svg');
}
.camera .video .opts .opt.audio {
  background-color: #863733;
  background-image: url('chrome-extension://__MSG_@@extension_id__/crx/vera/assets/icon/audio.off.svg');
}
.camera .video .opts .opt.pin {
  background-image: url('chrome-extension://__MSG_@@extension_id__/crx/vera/assets/icon/pin.svg');
}
.camera .video[bg='true'] .opts .opt.bg {
  background-image: url('chrome-extension://__MSG_@@extension_id__/crx/vera/assets/icon/bg.rm.svg');
}
.camera .video[video='true'] .opts .opt.video {
  background-image: url('chrome-extension://__MSG_@@extension_id__/crx/vera/assets/icon/video.on.svg');
}
.camera .video[audio='true'] .opts .opt.audio {
  background-color: var(--button-bg-color);
  background-image: url('chrome-extension://__MSG_@@extension_id__/crx/vera/assets/icon/audio.on.svg');
}
.camera .video[pin='true'] .opts .opt.pin {
  background-image: url('chrome-extension://__MSG_@@extension_id__/crx/vera/assets/icon/pin.off.svg');
}
.camera .video[waiting='true'] video {
  visibility: hidden;
}
.camera .video[waiting='true'] .mask.waiting {
  display: flex;
}
.camera .video video {
  width: 200px;
  height: 200px;
}
.camera .video canvas {
  width: 200px;
  height: 200px;
  position: absolute;
  left: 0;
  top: 0;
}
.camera .video canvas.side {
  display: none;
}
.camera .video .mask {
  z-index: 6;
  width: 200px;
  height: 200px;
  position: absolute;
  left: 0;
  top: 0;
  background-size: 45%;
  background-repeat: no-repeat;
  background-position: center;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 14px;
  font-weight: 800;
}
.camera .video .mask.user {
  background-image: url('chrome-extension://__MSG_@@extension_id__/crx/vera/assets/icon/user.svg');
}
.camera .video .mask.error {
  display: none;
  color: #ec3636;
}
.camera .video .mask.waiting {
  display: none;
  background-color: var(--camera-bg-color);
  width: 100%;
  height: 100%;
}
.camera .video .mask.waiting .loading {
  position: relative;
}
.camera .video .mask.waiting .loading .circle {
  width: 100px;
  height: 100px;
  animation: loading-rotate 1.5s infinite ease-in-out;
  /*给svg也加上一个旋转动画*/
}
.camera .video .mask.waiting .loading .circle .path {
  stroke: #000;
  /*给画笔设置一个颜色*/
  stroke-width: 3;
  /*设置线条的宽度*/
  stroke-dasharray: 95, 126;
  /*设置实现长95，虚线长126*/
  stroke-dashoffset: 0;
  /*设置虚线的偏移位置*/
  animation: loading-dash 1.5s ease-in-out infinite;
}
.camera .video .mask.waiting .loading .txt {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  color: var(--font-color);
}
@keyframes loading-dash {
  0% {
    stroke-dasharray: 1, 126;
    /*实线部分1，虚线部分126*/
    stroke-dashoffset: 0;
    /*前面1/126显示实线，后面125显示空白*/
  }
  50% {
    stroke-dasharray: 95, 126;
    /*实线部分95，虚线部分126*/
    stroke-dashoffset: -31px;
    /*顺时针偏移31/126，即前31/126显示空白，后面3/4显示线条*/
  }
  to {
    stroke-dasharray: 6, 120;
    /*实线部分6，虚线部分120*/
    stroke-dashoffset: -120px;
    /*最后顺时针偏移120/126，即前120/126显示空白，后面6点显示线条部分*/
  }
}
@keyframes loading-rotate {
  to {
    transform: rotate(1turn);
  }
}
.camera .video[video='true'] .mask.user {
  display: none;
}
.camera[camera-status='connected'] .btn {
  display: none;
}
.camera[camera-status='connected'] .controls,
.camera[camera-status='connected'] .opts {
  display: flex;
}
.camera[camera-status='connected'] .invite {
  display: none;
}
.camera[camera-status='allow-error'] .btn {
  display: none;
}
.camera[camera-status='allow-error'] .mask.error {
  display: flex;
}
